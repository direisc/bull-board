import { Primitive } from "@radix-ui/react-primitive";
import * as Polymorphic from "@radix-ui/react-polymorphic";
type FocusScopeOwnProps = Polymorphic.Merge<Polymorphic.OwnProps<typeof Primitive>, {
    /**
     * Whether focus should be trapped within the FocusScope
     * (default: false)
     */
    trapped?: boolean;
    /**
     * Event handler called when auto-focusing on mount.
     * Can be prevented.
     */
    onMountAutoFocus?: (event: Event) => void;
    /**
     * Event handler called when auto-focusing on unmount.
     * Can be prevented.
     */
    onUnmountAutoFocus?: (event: Event) => void;
}>;
type FocusScopePrimitive = Polymorphic.ForwardRefComponent<Polymorphic.IntrinsicElement<typeof Primitive>, FocusScopeOwnProps>;
export const FocusScope: FocusScopePrimitive;
export const Root: FocusScopePrimitive;

//# sourceMappingURL=index.d.ts.map
